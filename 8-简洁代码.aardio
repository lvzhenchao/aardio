import console; 

//不需要声明，直接调用原生api函数，语法简洁可读性好
//1、直接调用API函数
var result = ::User32.PtInRect( ::RECT(2,3,300,500) , 12, 66 );
console.log(result);

//2、将任何网络API甚至是任意普通网址声明为aardio对象
import web.rest.jsonLiteClient;
var http = web.rest.jsonLiteClient();
//导入远程 API
var countApi = http.api("https://api.countapi.xyz/hit{/domain}{/key}")
//服务器 API 已经变成了 aardio 函数对象
console.log(countApi);
var data = countApi["key"].get(); 
console.log(data);


//3、编译C语言生成DLL执行文件，再调用DLL中的C函数
import tcc;
//编译 DLL
tcc.build( "/start.dll" ).code = /***
#include <windows.h> 
__declspec(dllexport) int Add( int a,int b ) 
{     
  return a + b;
} 
***/

//加载 DLL
var dll = raw.loadDll( "/start.dll",,"cdecl" );
//调用 C函数
var result_c = dll.Add(12,3);
console.log(result_c);

//4、屏幕找字
import mouse;
import string.ocrLite;
import string.ocrLite.defaultModels;

var ocr = string.ocrLite();
var ocrResult = ocr.detectScreen();
var x,y = ocrResult.findPoint("要查找的按钮文本",0.1);
mouse.moveTo(x,y,true);





console.pause(true);
